{"version":3,"file":"userRepository.js","sourceRoot":"","sources":["../../src/repository/userRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAY;AACZ,yCAAsC;AAMtC,QAAQ;AACR,yDAAqC;AAGrC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEvB,gBAAe,CAAC;IAEV,UAAU,CAAC,EAAU,EAAE,IAAc;;YACvC,MAAM,cAAS,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;QACtD,CAAC;KAAA;CAEJ,CAAA;AARY,cAAc;IAD1B,sBAAU,EAAE;;GACA,cAAc,CAQ1B;AARY,wCAAc","sourcesContent":["// Inversify\r\nimport { injectable } from \"inversify\"\r\n\r\n// Interface\r\nimport { IUserRepository } from \"./IUserRepository\"\r\nimport { IUserDto } from \"../application/IUserDto\"\r\n\r\n// Class\r\nimport UserModel from \"./models/user\"\r\n\r\n@injectable()\r\nexport class UserRepository implements IUserRepository {\r\n\r\n    constructor() {}\r\n\r\n    async updateById(id: string, user: IUserDto): Promise<void> {\r\n        await UserModel.updateOne({ id }, { $set: user });\r\n    }\r\n        \r\n}"]}
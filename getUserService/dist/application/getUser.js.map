{"version":3,"file":"getUser.js","sourceRoot":"","sources":["../../src/application/getUser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAY;AACZ,yCAA+C;AAE/C,QAAQ;AACR,oDAAgD;AAShD,IAAqB,cAAc,GAAnC,MAAqB,cAAc;IAE/B,YAAmD,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;IAAG,CAAC;IAEhF,GAAG,CAAC,KAAU;;YAChB,MAAM,EAAE,EAAE,EAAE,GAAG,KAAK,CAAC;YACrB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;QAChB,CAAC;KAAA;CACJ,CAAA;AAVoB,cAAc;IADlC,sBAAU,EAAE;IAGI,WAAA,kBAAM,CAAC,aAAK,CAAC,eAAe,CAAC,CAAA;;GAFzB,cAAc,CAUlC;kBAVoB,cAAc","sourcesContent":["// Inversify\r\nimport { inject, injectable } from \"inversify\";\r\n\r\n// Types\r\nimport { TYPES } from \"../config/constant/types\"\r\n\r\n// Interface\r\nimport { IGetUserService } from \"./IGetUser\";\r\nimport { IUserRepository } from \"../repository/IUserRepository\";\r\nimport { IUserDto } from \"./IUserDto\";\r\n\r\n\r\n@injectable()\r\nexport default class GetUserService implements IGetUserService {\r\n\r\n    constructor(@inject(TYPES.IUserRepository) private userRepository: IUserRepository) {}\r\n\r\n    async get(event: any): Promise<IUserDto> {\r\n        const { id } = event;\r\n        const user = await this.userRepository.getById(id);\r\n        console.log('DATA: ', user);\r\n        return user;\r\n    }\r\n}"]}
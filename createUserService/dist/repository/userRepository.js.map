{"version":3,"file":"userRepository.js","sourceRoot":"","sources":["../../src/repository/userRepository.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAY;AACZ,yCAAsC;AAQtC,yDAAqC;AAGrC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEvB,gBAAe,CAAC;IAEH,IAAI,CAAC,IAAU;;YAExB,qBAAqB;YACrB,MAAM,OAAO,GAAG,IAAI,cAAS,CAAC,IAAI,CAAC,CAAA;YAEnC,mCAAmC;YACnC,MAAM,WAAW,GAAa,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;YAElD,kBAAkB;YAClB,OAAO,WAAW,CAAC;QACvB,CAAC;KAAA;CAEJ,CAAA;AAhBY,cAAc;IAD1B,sBAAU,EAAE;;GACA,cAAc,CAgB1B;AAhBY,wCAAc","sourcesContent":["// Inversify\r\nimport { injectable } from \"inversify\"\r\n\r\n// Interface\r\nimport { IUserRepository } from \"./IUserRepository\"\r\nimport { IUserDto } from \"../application/IUserDto\"\r\n\r\n// Class\r\nimport { User } from \"../entities/user\"\r\nimport UserModel from \"./models/user\"\r\n\r\n@injectable()\r\nexport class UserRepository implements IUserRepository {\r\n\r\n    constructor() {}\r\n\r\n    public async save(user: User): Promise<IUserDto> {\r\n\r\n        // Create User Object\r\n        const newUser = new UserModel(user)\r\n\r\n        // Db save Object collection Users.\r\n        const userCreated: IUserDto = await newUser.save()\r\n\r\n        // Return document\r\n        return userCreated;\r\n    }\r\n        \r\n}"]}